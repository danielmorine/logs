syntax = "proto3";

option csharp_namespace = "regGRPC";

package greet;

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply);
  rpc SendRegistrationProcess (RegistrationProcessRequest) returns (DefaultResponse);
  rpc SendValidateEnvironmentTypeRequest (ValidateEnvironmentTypeRequest) returns (DefaultResponse);
  rpc SendValidateLevelTypeRequest (ValidateLevelTypeRequest) returns (DefaultResponse);
  rpc SendGetAllRegistrationProcess (GetAllRegistrationProcessRequest) returns (GetAllRegistrationProcessResponse);
  rpc GetByIdRegistrationProcess (GetByIdRegistrationProcessRequest) returns (GetByIdRegistrationProcessResponse);
  rpc ValidateRegistrationProcessId (ValidateRegistrationProcessIdRequest) returns (DefaultResponse); 
  rpc Archive (ArchiveRequest) returns (DefaultResponse);
  rpc Delete (DeleteRequest) returns (DefaultResponse);
  rpc FilterRegistrationProcess (FilterRegistrationProcessRequest) returns (GetAllRegistrationProcessResponse);
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings.
message HelloReply {
  string message = 1;
}

message RegistrationProcessRequest {
	string title = 1;
	string reportDescription = 2;
	string reportSource = 3;
	int32 levelTypeID = 4;
	int32 events = 5;
	int32 environmentTypeID = 6;
	string ownerID = 7;
	string details = 8;
}

message DefaultResponse { 
	bool status = 1;
}

message ValidateEnvironmentTypeRequest {
	int32 environmentTypeID = 1;
}

message ValidateLevelTypeRequest {
	int32 levelTypeID = 1;
}

message GetAllRegistrationProcessRequest {
}

message GetAllRegistrationProcessResponse {
	repeated GetAllRegistrationProcessObject list = 1;
}

message GetAllRegistrationProcessObject {
	string reportDescription = 1;
	string reportSource = 2;
	string levelTypeName = 3;
	string environmentTypeName = 4;
	int32 events = 5;
	string registrationProcessID = 6;
	string createdDate = 7;
}

message GetByIdRegistrationProcessRequest {
	string registrationProcessID = 1;
}

message GetByIdRegistrationProcessResponse {
	string reportSource = 1;
	string levelTypeName = 2;
	int32 events = 3;
	string registrationProcessID = 4;
	string createdDate = 5;
	string title = 6;
	string details = 7;
	string ownerID = 8;
	string environmentTypeName = 9;
}

message ValidateRegistrationProcessIdRequest {
	string registrationProcessID = 1;
}

message ArchiveRequest {
	repeated ArchiveRequestObject list = 1;
}

message ArchiveRequestObject {
	string id = 1;
}

message DeleteRequest {
	repeated ArchiveRequestObject list = 1;
}

message DeleteRequestObject {
	string id = 1;		 
}

message FilterRegistrationProcessRequest {
	string envFilter = 1;
	string levelFilter = 2;
	string orderBy = 3;
	string sortDirection = 4;
	string searchType = 5;
	string searchValue = 6;
}